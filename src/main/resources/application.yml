spring:
  application:
    name: TMS
  threads:
    virtual:
      enabled: true
  jpa:
    open-in-view: false
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASS}
  neo4j:
    uri: bolt://${DB_NEO4J_HOST}:${DB_NEO4J_PORT}
    authentication:
      username: ${DB_NEO4J_USER}
      password: ${DB_NEO4J_PASS}
  mvc:
    problemdetails:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS}

server:
  shutdown: graceful
  compression:
    enabled: true

tms-logging:
  format: ${LOG_FORMAT}
  file:
    enabled: 'false'
    path: tmp/logs/${spring.application.name}
    name: ${spring.application.name}
    max-history-days: 5
    total-size-cap: 3GB
    max-size: 10MB
    pattern:
      rolling-file-name: ${tms-logging.file.path}/${tms-logging.file.name}-%d{yyyy-MM-dd}-%i

otel:
  service:
    name: ${spring.application.name}-OTEL-SERVICE
  metrics:
    exporter: otlp
  traces:
    exporter: otlp
  logs:
    exporter: otlp
  exporter:
    otlp:
      protocol: grpc
      endpoint: http://0.0.0.0:4317
  sdk:
    disabled: false
  instrumentation:
    jdbc:
      enabled: true
    spring-web:
      enabled: false
    micrometer:
      enabled: true