receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  rabbitmq:
    endpoint: http://tms-broker:15672
    username: tms-otel
    password: bitnami
    collection_interval: 10s
  nginx:
    endpoint: "http://tms-nginx/nginx_status"
    collection_interval: 10s
  filelog:
    include: ["/var/log/nginx/access.log"]
    operators:
      - type: json_parser
        if: 'body matches "^{.*}$"'
        parse_from: body

processors:
  batch:
  resource/nginx:
    attributes:
      - key: service.name
        value: "NGINX-OTEL-SERVICE"
        action: upsert
  resource/ecosystem:
    attributes:
      - key: service.namespace
        value: "TMS-NAMESPACE"
        action: upsert
  attributes:
    actions:
      - key: Source
        value: "Otel-Collector"
        action: upsert

extensions:
  health_check:
  pprof:
  zpages:

exporters:
  prometheusremotewrite:
    endpoint: "http://tms-prometheus:9090/api/v1/write"
    tls:
      insecure: true
  debug:
    verbosity: detailed
  otlphttp/logs:
    endpoint: "http://tms-loki:3100/otlp"
    tls:
      insecure: true
  otlp:
    endpoint: "http://tms-jaeger:4317"
    tls:
      insecure: true

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [otlp]
    metrics:
      receivers: [otlp, rabbitmq, nginx]
      processors: [batch]
      exporters: [prometheusremotewrite]
    logs/filelog:
      receivers: [filelog]
      processors: [attributes, resource/nginx, resource/ecosystem]
      exporters: [otlphttp/logs, debug]
    logs/otlp:
      receivers: [ otlp ]
      processors: [ attributes, resource/ecosystem ]
      exporters: [ otlphttp/logs, debug ]